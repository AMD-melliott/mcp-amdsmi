[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mcp-amdsmi"
version = "0.1.0"
description = "AMD SMI MCP Server for intelligent GPU monitoring"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "PEARC25 Workshop", email = "example@example.com"},
]
keywords = ["mcp", "amd", "gpu", "monitoring", "smi"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Hardware",
]

dependencies = [
    "mcp>=1.0.0",
    "fastmcp>=0.1.0",
    "rich>=13.3.5",
    "pydantic>=2.0.0",
    "amdsmi>=6.0.0",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "python-multipart>=0.0.6",
    "starlette>=0.27.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.3.1",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.3.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
    "mypy>=1.3.0",
    "aiohttp>=3.8.0",
]

[project.scripts]
mcp-amdsmi = "mcp_amdsmi.unified_server:main"
mcp-amdsmi-stdio = "mcp_amdsmi.server:main"

[project.urls]
Homepage = "https://github.com/example/mcp-amdsmi"
Repository = "https://github.com/example/mcp-amdsmi.git"
Issues = "https://github.com/example/mcp-amdsmi/issues"

[tool.setuptools]
packages = ["mcp_amdsmi"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["mcp_amdsmi"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]